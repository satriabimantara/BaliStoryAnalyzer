"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import sys
from dotenv import load_dotenv

load_dotenv(override=True)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SETTINGS_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('IS_DEBUG')

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'narratives'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db_balinarrative_nlp.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(BASE_DIR, 'narratives/static/')
MEDIA_ROOT = os.path.join(BASE_DIR, 'narratives/media/')


# Register our Bali Narrative NLP Packages
BALINLP_DIRS = os.path.join(BASE_DIR, 'balinarrativenlp')
BALINLP_PACKAGES = os.path.join(BALINLP_DIRS, 'packages')
BALINLP_VENDOR_PACKAGES = os.path.join(BALINLP_DIRS, 'vendor')
BALINLP_BALISENTILEX = os.path.join(BALINLP_DIRS, 'balisentilex')
sys.path.append(BALINLP_PACKAGES)
sys.path.append(BALINLP_VENDOR_PACKAGES)

# register our pretrained model
BALINLP_PRETRAINED_MODELS_ROOT_PATH = os.path.join(
    BALINLP_DIRS, 'pretrained-models')
BALINLP_PRETRAINED_CHARS_IDENTIFICATION_MODELS = os.path.join(
    BALINLP_PRETRAINED_MODELS_ROOT_PATH, 'character-identification')
BALINLP_PRETRAINED_CHARS_CLASSIFICATION_MODELS = os.path.join(
    BALINLP_PRETRAINED_MODELS_ROOT_PATH, 'character-classification')
BALINLP_PRETRAINED_WORDEMBEDDING_MODELS = os.path.join(
    BALINLP_PRETRAINED_MODELS_ROOT_PATH, 'balinese-wordembedding')
BALINLP_PRETRAINED_LABEL_ENCODER = os.path.join(
    BALINLP_PRETRAINED_MODELS_ROOT_PATH, 'label-encoder'
)

# register specific packages modules
BALINLP_PACKAGES_CHARS_CLASSIFICATION_MODULE = os.path.join(
    BALINLP_PACKAGES, 'CharacterClassificationModule')
sys.path.append(BALINLP_PACKAGES_CHARS_CLASSIFICATION_MODULE)
